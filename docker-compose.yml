version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: comunidad-viva-db
    environment:
      POSTGRES_DB: comunidad_viva
      POSTGRES_USER: ${DB_USER:-comunidad}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - comunidad-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-comunidad}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: comunidad-viva-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - comunidad-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: comunidad-viva-api
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 4000
      DATABASE_URL: postgresql://${DB_USER:-comunidad}:${DB_PASSWORD:-secret}@postgres:5432/comunidad_viva
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      S3_BUCKET: ${S3_BUCKET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_REGION: ${S3_REGION}
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    networks:
      - comunidad-network
    command: sh -c "npx prisma migrate deploy && npm run start:dev"

  frontend:
    build:
      context: ./packages/web
      dockerfile: Dockerfile
    container_name: comunidad-viva-web
    environment:
      NEXT_PUBLIC_API_URL: ${API_URL:-http://localhost:4000}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./packages/web:/app
      - /app/node_modules
      - /app/.next
    networks:
      - comunidad-network

  nginx:
    image: nginx:alpine
    container_name: comunidad-viva-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - comunidad-network

  backup:
    image: postgres:15-alpine
    container_name: comunidad-viva-backup
    environment:
      PGPASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - ./backups:/backups
    networks:
      - comunidad-network
    profiles:
      - tools
    command: >
      sh -c "
        while true; do
          pg_dump -h postgres -U ${DB_USER:-comunidad} comunidad_viva > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          find /backups -type f -mtime +7 -delete
          sleep 86400
        done
      "

  monitoring:
    image: prom/prometheus:latest
    container_name: comunidad-viva-monitoring
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - comunidad-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: comunidad-viva-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    ports:
      - "3001:3000"
    networks:
      - comunidad-network
    profiles:
      - monitoring

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  comunidad-network:
    driver: bridge
